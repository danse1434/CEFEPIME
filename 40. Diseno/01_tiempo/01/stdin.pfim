#	PFIM Interface 4.0, 2006-2014
#	The PFIM Group - Université Paris Diderot – INSERM.
#
#-----------------------------------------------------------------------------------
#This file was auto-generated by the PFIM interface, please do not edit it!
#-----------------------------------------------------------------------------------
#Name of the project
#--------------------
project<-"01_ORIGINAL"
projectPath<-"F:/Documentos/(Proyecto)_Estudio_PKPD/CEFEPIME/40. Diseno/01_tiempo/"
outputFIM<-"01_outFIM"

#Name of the file containing the PK or PD model
#----------------------------------------------
file.model<-"model.r"

#Number of responses
#----------------------------------------------
nr<-1
null<-NULL

#Modelform: Differential equations (DE) or analytical form (AF)
#--------------------------------------------------------------
modelname<-"infusion_2cpt_ClV1QV2"
modelform<-"AF"

#Name of the output file for the results
#---------------------------------------
output<-"Stdout.r";

#Values
#------------------------------------
vafval<-c(c(0.5))

#Name of the fixed effects parameters
#------------------------------------
parameters<-c('Cl','V1','Q','V2')

#Fixed effects parameters values
#-------------------------------
beta<-c(13.508,23.899,26.154,13.116)

#Diagonal Matrix of variance for the random effects:
#-------------------------------
omega<-diag(c(0.2643,0.2390,1.5012,1.1926))

beta.fixed<-c(F,F,F,F)

#############ONLY FOR OPTIMISATION #########################
#Identical sampling times for each response
# (only if you do not have sampling times==NULL)
#-----------------------------------------------
identical.times<-T

#Standard deviation of the residual error (sig.inter+sig.slope*f)^2:
#-------------------------------------------------------------------
sig.interA<-1.516
sig.slopeA<-4.44

#Between-subject variance model (1) = additive  (2) = exponential
#----------------------------------------------------------------
Trand<-2;
FIM<-"P"


#Subjects input: (1) for number of subjects (2) for proportions of subjects
#--------------------------------------------------------------------------
subjects.input<-1

#If 'proportions of subjects' give the total number of sample
#------------------------------------------------------------
Ntot<-16


#List of the vectors of sampling times for each elementary design
#you can specify any sampling times for a group by writing NULL
#ONLY if you have several responses
#----------------------------------------------------------------
protA<-list(c(0.833, 0.5, 1.5, 3, 5, 7.83))

#Vector of the numbers of subjects for each elementary design
#------------------------------------------------------------
subjects<-c(16)



###### ANALYTICAL MODEL OPTION #############################
############################################################

#Identical dose in each elementary design (Yes=T, No=F)
#------------------------------------------------------
dose.identical<-T

# If 'Yes', enter the value of the dose, 
# else, enter the vector of the dose values for each elementary design
#---------------------------------------------------------------------
dose<-1000

NUM<-F


###### END ANALYTICAL MODEL OPTION ########################

###### DIFFERENTIAL EQUATION OPTION ##################################
######################################################################

#Initial time for which initial conditions are given
#---------------------------------------------------
time.condinit<-0

#Identical initial conditions in each elementary design (Yes=T, No=F)
#--------------------------------------------------------------------
condinit.identical<-T

# If 'Yes', enter once the expression of the initial values of the system at the initial time
# else, enter the vectors of the initial conditions for each elementary design
# If initial values depend on parameters to be estimated, 
# enter this parameter into the expression without any quotation marks 
#----------------------------------------------------------------------
condinit<-expression(c(100, 0, 96.6))

# Error tolerance for solving differential equations
#---------------------------------------------------
RtolEQ<-1e-06
AtolEQ<-1e-06
Hmax<-Inf

###### END DIFFERENTIAL EQUATION OPTION #################################

###### GRAPHICAL OPTIONS ##########################################
###################################################################

#graphical representation (Yes=T, No=F)
#--------------------------------------

graph.logical<-T

graphsensi.logical<-T

names.datax<-c("Tiempo")
names.datay<-c("Concentracion")
#Controls logarithmic axes for the graphical representation.
#Values "xy", "x", or "y" produce log-log or log-x or log-y axes.
#(For standard graphic, log.logical<-F)
#----------------------------------------------------------------------
log.logical<-F


#Vector of lower and upper concentration for the graph
#-----------------------------------------------------
y.rangeA<-NULL # default range

graph.infA<-c(0)
graph.supA<-c(12)

graphOutput<-2
graph.identicaltime<-T
####### END GRAPHICAL OPTION ##########################
algo.option<-"SIMP"

####### SIMPLEX SPECIFICATION #######

#Optimisation of the proportions of subjects: (Yes=T, No=F)
#----------------------------------------------------------

subjects.opt<-F

#Vector of lower and upper admissible sampling times
#---------------------------------------------------
interA<-list(c(0),c(8))
lowerA<-interA[[1]]
upperA<-interA[[2]]

#Minimum delay between two sampling times
#----------------------------------------
delta.time<-0.3

graph.only<-F
#Print iteration step (Yes=T, No=F)
#----------------------------------
iter.print<-T

#Parameter for initial simplex building (%)
#------------------------------------------
simplex.parameter<-20

#Maximum iteration number
#------------------------
Max.iter<-10000

#Relative convergence tolerance
#------------------------------
Rctol<-1e-6
#############################
#FEDOROV-WYNN SPECIFICATION #
#############################
criterion<-"D"
############# END OF OPTIMISATION ALGORITHM OPTION ###############
