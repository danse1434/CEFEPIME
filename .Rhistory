##########################################################################-
# Selecci贸n de directorio principal
setwd(file.path('04. Residual', 'Modelo_8', 'RES_M1'))
source(file.path('src', '10_performance_fun.R'), encoding = 'UTF-8')
##########################################################################-
# Bondad de ajuste -------------------------------------------------
##########################################################################-
# Ajuste de una variable para guardar la subcarpeta que contiene datos de
# gr?fico de bondad de ajuste
gof_dir <- file.path('ChartsData','ObservationsVsPredictions')
# Selecci贸n de tema
theme_set(theme_bw() +
theme(panel.grid.major = element_line(colour = 'gray80'),
panel.grid.minor = element_line(colour = 'gray95')))
##=========================================================================#
## Nombre del Script: Obtencion de gr?ficos a partir de datos de figuras---
## generados por Monolix GUI.
##
## Proposito del Script: crear y almacenar gr?ficos generados a partir de
## los datos generados por la suite de Monolix, se debe colocar en la misma
## carpeta en la que se encuentra el proyecto. Este script lee en la carpeta
## ChartsData, que tiene como subdirectorios a cada gr?fico generado por la
## suite de Monolix.
##
## Autor: Daniel S. Parra Gonzalez
## Fecha de creacion: 04-feb-2020
##
## Copyright (c) Daniel S. Parra, 2020
##
## Email: dsparrag@unal.edu.co
##=========================================================================#
##########################################################################-
# Introducci?n -----------------------------------------------------
##########################################################################-
# Carga de paquetes
require(tidyverse)
require(rlang)
require(patchwork)
##########################################################################-
# Selecci贸n de directorio principal
setwd(file.path('04. Residual', 'Modelo_8', 'RES_M1'))
source(file.path('src', '10_performance_fun.R'), encoding = 'UTF-8')
##########################################################################-
# Bondad de ajuste -------------------------------------------------
##########################################################################-
# Ajuste de una variable para guardar la subcarpeta que contiene datos de
# gr?fico de bondad de ajuste
gof_dir <- file.path('ChartsData','ObservationsVsPredictions')
# Selecci贸n de tema
theme_set(theme_bw() +
theme(panel.grid.major = element_line(colour = 'gray80'),
panel.grid.minor = element_line(colour = 'gray95')))
# Apertura de archivo de datos
y_1_obsVsPred <- # Observaciones vs predicciones
read_csv(file.path(gof_dir, 'y_1_obsVsPred.txt'))
y_1_visualGuides <- # Ayudas visuales
read_csv(file.path(gof_dir, 'y_1_visualGuides.txt'))
y_1_obsVsSimulatedPred <- # Observaciones vs predicciones simuladas
read_csv(file.path(gof_dir, 'y_1_obsVsSimulatedPred.txt'))
##########################################################################-
# Gr?ficos individuales-----------------------------------------------------
##########################################################################-
# Carga de ajustes individuales
y_1_fits <- read_csv("ChartsData/IndividualFits/y_1_fits.txt")
y_1_observations <- read_csv("ChartsData/IndividualFits/y_1_observations.txt") %>%
left_join(., last_dose, by = 'ID') %>%
mutate(TAD = time - TIME)
G_CP_TAD <-
y_1_fits %>%
left_join(., last_dose, by = 'ID') %>%
mutate(TAD = time - TIME) %>%
ggplot(mapping = aes(x = TAD)) +
geom_line(aes(y = pop), lty = 'dashed') +
geom_line(aes(y = indivPredMean), lty = 'solid', col = 'green3') +
facet_wrap( ~ ID, ncol = 4, labeller = labeller(.cols = label_both)) +
geom_point(data = y_1_observations,
mapping = aes(x = TAD, y = y_1),
col = 'green4') +
xlim(0, NA) +
xlab('TAD') + ylab(expression(C[P]))
G_CP_TAD
last_dose
last_dose <- data %>%
group_by(ID) %>%
filter(EVID == 1) %>%
slice(n()) %>%
select(ID, TIME)
data <- read_delim("Monolix_data.csv", delim = ';')
last_dose <- data %>%
group_by(ID) %>%
filter(EVID == 1) %>%
slice(n()) %>%
select(ID, TIME)
##########################################################################-
# Gr?ficos individuales-----------------------------------------------------
##########################################################################-
# Carga de ajustes individuales
y_1_fits <- read_csv("ChartsData/IndividualFits/y_1_fits.txt")
y_1_observations <- read_csv("ChartsData/IndividualFits/y_1_observations.txt") %>%
left_join(., last_dose, by = 'ID') %>%
mutate(TAD = time - TIME)
G_CP_TAD <-
y_1_fits %>%
left_join(., last_dose, by = 'ID') %>%
mutate(TAD = time - TIME) %>%
ggplot(mapping = aes(x = TAD)) +
geom_line(aes(y = pop), lty = 'dashed') +
geom_line(aes(y = indivPredMean), lty = 'solid', col = 'green3') +
facet_wrap( ~ ID, ncol = 4, labeller = labeller(.cols = label_both)) +
geom_point(data = y_1_observations,
mapping = aes(x = TAD, y = y_1),
col = 'green4') +
xlim(0, NA) +
xlab('TAD') + ylab(expression(C[P]))
G_CP_TAD
G_CP_TAD <-
y_1_fits %>%
left_join(., last_dose, by = 'ID') %>%
mutate(TAD = time - TIME) %>%
ggplot(mapping = aes(x = TAD)) +
geom_line(aes(y = pop), lty = 'dashed') +
geom_line(aes(y = indivPredMean), lty = 'solid', col = 'green3') +
facet_wrap( ~ ID, ncol = 5, labeller = labeller(.cols = label_both)) +
geom_point(data = y_1_observations,
mapping = aes(x = TAD, y = y_1),
col = 'green4') +
xlim(0, NA) +
xlab('TAD') + ylab(expression(C[P]))
G_CP_TAD
ggsave(filename = 'FIGURAS/G_CP_TAD.pdf', plot = G_CP_TAD,
device = 'pdf', width = 8, height = 4)
ggsave(filename = 'FIGURAS/G_CP_TAD.pdf', plot = G_CP_TAD,
device = 'pdf', width = 8, height = 6)
G_CP_TAD <-
y_1_fits %>%
left_join(., last_dose, by = 'ID') %>%
mutate(TAD = time - TIME) %>%
ggplot(mapping = aes(x = TAD)) +
geom_line(aes(y = pop), lty = 'dashed') +
geom_line(aes(y = indivPredMean), lty = 'solid', col = 'green3') +
facet_wrap( ~ ID, ncol = 5, labeller = labeller(.cols = label_both)) +
geom_point(data = y_1_observations,
mapping = aes(x = TAD, y = y_1),
col = 'green4') +
xlim(0, NA) +
xlab('TAD (h)') + ylab(expression(C[P]~'(mg/L)'))
ggsave(filename = 'FIGURAS/G_CP_TAD.pdf', plot = G_CP_TAD,
device = 'pdf', width = 8, height = 6)
G_CP_TAD <-
y_1_fits %>%
left_join(., last_dose, by = 'ID') %>%
mutate(TAD = time - TIME) %>%
ggplot(mapping = aes(x = TAD)) +
geom_line(aes(y = pop), lty = 'dashed') +
geom_line(aes(y = indivPredMean), lty = 'solid', col = 'green3') +
facet_wrap( ~ ID, ncol = 5, labeller = labeller(.cols = label_both)) +
geom_point(data = y_1_observations,
mapping = aes(x = TAD, y = y_1),
col = 'green4') +
xlim(0, NA) +
xlab('TAD (h)') + ylab(expression(C[P]~'(mg/L)')) +
theme(panel.grid = element_blank())
G_CP_TAD
G_CP_TAD <-
y_1_fits %>%
left_join(., last_dose, by = 'ID') %>%
mutate(TAD = time - TIME) %>%
ggplot(mapping = aes(x = TAD)) +
geom_line(aes(y = pop), lty = 'dashed') +
geom_line(aes(y = indivPredMean), lty = 'solid', col = 'green3') +
facet_wrap( ~ ID, ncol = 5, labeller = labeller(.cols = label_both)) +
geom_point(data = y_1_observations,
mapping = aes(x = TAD, y = y_1),
col = 'green4') +
xlim(0, NA) +
xlab('TAD (h)') + ylab(expression(C[P]~'(mg/L)')) +
theme(panel.grid = element_blank())
G_CP_TAD
G_CP_TAD <-
y_1_fits %>%
left_join(., last_dose, by = 'ID') %>%
mutate(TAD = time - TIME) %>%
ggplot(mapping = aes(x = TAD)) +
geom_line(aes(y = pop), lty = 'dashed') +
geom_line(aes(y = indivPredMean), lty = 'solid', col = 'green3') +
facet_wrap( ~ ID, ncol = 5, labeller = labeller(.cols = label_both)) +
geom_point(data = y_1_observations,
mapping = aes(x = TAD, y = y_1),
col = 'green4') +
xlim(0, NA) +
xlab('TAD (h)') + ylab(expression(C[P]~'(mg/L)')) +
theme(panel.grid = element_blank())
G_CP_TAD
G_CP_TAD <-
y_1_fits %>%
left_join(., last_dose, by = 'ID') %>%
mutate(TAD = time - TIME) %>%
ggplot(mapping = aes(x = TAD)) +
geom_line(aes(y = pop), lty = 'dashed') +
geom_line(aes(y = indivPredMean), lty = 'solid', col = 'green3') +
facet_wrap( ~ ID, ncol = 5, labeller = labeller(.cols = label_both)) +
geom_point(data = y_1_observations,
mapping = aes(x = TAD, y = y_1),
col = 'green4') +
xlim(0, NA) +
xlab('TAD (h)') + ylab(expression(C[P]~'(mg/L)')) +
theme(panel.grid.major = element_blank())
G_CP_TAD
G_CP_TAD <-
y_1_fits %>%
left_join(., last_dose, by = 'ID') %>%
mutate(TAD = time - TIME) %>%
ggplot(mapping = aes(x = TAD)) +
geom_line(aes(y = pop), lty = 'dashed') +
geom_line(aes(y = indivPredMean), lty = 'solid', col = 'green3') +
facet_wrap( ~ ID, ncol = 5, labeller = labeller(.cols = label_both)) +
geom_point(data = y_1_observations,
mapping = aes(x = TAD, y = y_1),
col = 'green4') +
xlim(0, NA) +
xlab('TAD (h)') + ylab(expression(C[P]~'(mg/L)')) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
G_CP_TAD
ggsave(filename = 'FIGURAS/G_CP_TAD.pdf', plot = G_CP_TAD,
device = 'pdf', width = 8, height = 6)
ggsave(filename = 'FIGURAS/G_CP_TAD.pdf', plot = G_CP_TAD,
device = 'pdf', width = 7, height = 5.5)
G_CP_TAD <-
y_1_fits %>%
left_join(., last_dose, by = 'ID') %>%
mutate(TAD = time - TIME) %>%
ggplot(mapping = aes(x = TAD)) +
geom_line(aes(y = pop), lty = 'dashed') +
geom_line(aes(y = indivPredMean), lty = 'solid', col = 'green3') +
facet_wrap( ~ ID, ncol = 5, labeller = labeller(.cols = label_both)) +
geom_point(data = y_1_observations,
mapping = aes(x = TAD, y = y_1),
col = 'green4') +
xlim(0, NA) +
xlab('TAD (h)') + ylab(expression(C[P]~'(mg/L)')) +
theme(panel.grid.major = element_line(colour = 'gray90'),
panel.grid.minor = element_blank())
G_CP_TAD
G_CP_TAD <-
y_1_fits %>%
left_join(., last_dose, by = 'ID') %>%
mutate(TAD = time - TIME) %>%
ggplot(mapping = aes(x = TAD)) +
geom_line(aes(y = pop), lty = 'dashed') +
geom_line(aes(y = indivPredMean), lty = 'solid', col = 'green3') +
facet_wrap( ~ ID, ncol = 5, labeller = labeller(.cols = label_both)) +
geom_point(data = y_1_observations,
mapping = aes(x = TAD, y = y_1),
col = 'green4') +
xlim(0, NA) +
xlab('TAD (h)') + ylab(expression(C[P]~'(mg/L)')) +
theme(panel.grid.major = element_line(colour = 'gray95'),
panel.grid.minor = element_blank())
G_CP_TAD
ggsave(filename = 'FIGURAS/G_CP_TAD.pdf', plot = G_CP_TAD,
device = 'pdf', width = 7, height = 5.5)
